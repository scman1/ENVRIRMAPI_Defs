swagger: '2.0'
info:
  description: >-
    This is a sample description of the data cite DOI API derived from the
    description provided at
    [https://mds.datacite.org/static/apidoc](https://mds.datacite.org/static/apidoc)
  version: 2.0.0
  title: DataCite DOI API for data centres
  termsOfService: 'https://www.datacite.org/terms.html'
  contact:
    url: 'http://datacite.org/members'
  license:
    name: DataCite TOS
    url: 'https://www.datacite.org/terms.html'
host: mds.datacite.org
basePath: /
tags:
  - name: doi
    description: API for minting and retrieving DOIs
    externalDocs:
      description: Find out more about DataCite API
      url: 'https://mds.datacite.org/static/apidoc'
schemes:
  - https
paths:
  /doi:
    post:
      tags:
        - doi
      summary: Mint a new DOI
      description: ''
      operationId: mintDOI
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: DOI that needs to be minted and registered
          required: true
          schema:
            $ref: '#/definitions/doi'
      responses:
        '201':
          description: Created - operation successful
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: >-
            Bad Request - request body must be exactly two lines: DOI and
            URL;             wrong domain, wrong prefix
        '401':
          description: Unauthorized - no login
        '403':
          description: 'Forbidden - login problem, quota exceeded'
        '412':
          description: Precondition failed - metadata must be uploaded first
        '500':
          description: >-
            Internal Server Error - server internal error, try later and
            if             problem persists please contact us
      security:
        - doi_auth:
            - 'write:dois'
            - 'read:dois'
    get:
      tags:
        - doi
      summary: List of all DOIs for the requesting datacentre.
      description: >-
        This request returns a list of all DOIs for the requesting datacentre.
        There is no guaranteed order.
      operationId: listAllDcDOIs
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      responses:
        '200':
          description: OK - operation successful
        '204':
          description: No Content - no DOIs founds
      security:
        - doi_auth:
            - 'write:dois'
            - 'read:dois'
  '/doi/{doi}':
    get:
      tags:
        - doi
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: doi
          in: path
          description: DOI of URL to return
          required: true
          type: string
      responses:
        '200':
          description: OK - operation successful
          schema:
            $ref: '#/definitions/doi'
        '401':
          description: Unauthorized - no login
        '403':
          description: login problem or dataset belongs to another party
        '404':
          description: Not Found - DOI does not exist in our database
        '500':
          description: >-
            Internal Server Error - server internal error, try later and if
            problem persists please contact us
      security:
        - doi_auth:
            - 'write:dois'
            - 'read:dois'
securityDefinitions:
  doi_auth:
    type: oauth2
    authorizationUrl: 'http://doistore.swagger.io/oauth/dialog'
    flow: implicit
    scopes:
      'write:dois': modify DOIss in your account
      'read:dois': read your DOIs
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  doi:
    type: object
    required:
      - doi
      - doiUrl
    properties:
      doi:
        type: string
        example: doi
      doiUrl:
        type: string
        example: doiurl
    xml:
      name: doi
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about DataCite API v2 for data centres
  url: 'https://mds.datacite.org/static/apidoc'
